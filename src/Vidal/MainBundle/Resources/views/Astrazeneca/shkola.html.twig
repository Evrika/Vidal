{% extends 'VidalMainBundle::layout.html.twig' %}


{% block middle %}
	<div class="pages">
	{# Школа гастрита #}
	<div class="page page-main">
		<img src="{{ asset('bundles/vidalmain/images/shkola/page-main.png') }}" class="page-main-bg"/>

		<div class="context left top">
			<div class="main-title">
				ШКОЛА<br/>ГАСТРИТА
			</div>

			<div class="main-about">
				Для профилактики гастрита рекомендуем Вам проконсультироваться со специалистом.
				Найти специалиста рядом с Вами Вы можете с помощью
				<a href="#map" class="link">нашей карты</a>
			</div>

			<div class="main-links">
				<a href="#articles" class="link">СТАТЬИ</a>
				<a href="#video" class="link">ВИДЕО</a>
				<a href="#test" class="link">ТЕСТ</a>
				<a href="#qa" class="link">ВОПРОС-ОТВЕТ</a>
				<a href="#map" class="link">КАРТА</a>
			</div>

			<div class="texts">
				{% for blog in blogs %}
					<div class="text-{{ blog.id }} {{ loop.first ? 'active' }}">
						{{ blog.text|raw }}
					</div>
				{% endfor %}
			</div>
		</div>

		<div class="blogs">
			<div class="images">
				{% for blog in blogs %}
					<div class="image-{{ blog.id }} {{ loop.first ? 'active' }}">
						<img src="{{ blog.photo.path }}"/>
					</div>
				{% endfor %}
			</div>
			<div class="slider">
				<div>
					{% for blog in blogs %}
						<a href="#" data="{{ blog.id }}" {{ loop.first ? 'class="active"' }}></a>
					{% endfor %}
				</div>
			</div>
		</div>
	</div>

	{# Статьи #}
	<div class="page page-articles" id="articles">
		<div class="content">
			<div class="articles">
				{% for article in articles %}
					<div class="article article-{{ article.id }} {{ loop.index == 1 ? 'active' }}"
						 data="{{ article.id }}">
						<div class="article-img">
							{% if article.photo and is_file(article.photo.path) %}
								<img src="{{ article.photo.path }}"/>
							{% endif %}
						</div>
						<div class="article-text">
							<div class="article-title">
								{{ article.title|upper }}
							</div>
							<div class="article-anons">{{ article.anons|raw }}</div>
						</div>
						<div class="article-body">
							{{ article.body|raw }}
						</div>
					</div>
				{% endfor %}
			</div>
		</div>

		<div class="roller">
			<div>
				{% for article in articles %}
					<a href="#" data="{{ article.id }}" {{ loop.first ? 'class="active"' }}></a>
				{% endfor %}
			</div>
		</div>

		<a class="p-left" href="#"><img src="{{ asset('bundles/vidalmain/images/shkola/p-left.png') }}"/></a>
		<a class="p-right" href="#"><img src="{{ asset('bundles/vidalmain/images/shkola/p-right.png') }}"/></a>
	</div>

	{# Видео #}
	<div class="page page-video" id="video">
		<div class="scroller">
			<div>
				<a href="#" data="{{ 1 }}" class="active"></a>
				<a href="#" data="{{ 2 }}"></a>
				<a href="#" data="{{ 3 }}"></a>
				<a href="#" data="{{ 4 }}"></a>
				<a href="#" data="{{ 5 }}"></a>
			</div>
		</div>

		<a class="s-left" href="#"><img src="{{ asset('bundles/vidalmain/images/shkola/l.png') }}"/></a>
		<a class="s-right" href="#"><img src="{{ asset('bundles/vidalmain/images/shkola/r.png') }}"/></a>

		<div class="content">
			<div class="videos">
				<div class="video video-1 active">
					<div class="video-title">
						<b>СИМПТОМЫ ГАСТРИТА</b>

						<div>Читает профессор, д.м.н. Щербаков Петр Леонидович,
							руководитель отдела диагностической эндоскопии
							Московского клинического научно-практического центра
						</div>
					</div>
					<div id="video1" class="video-flv"></div>
					<script type="text/javascript">
						var so = new SWFObject('/players/uppod.swf', 'mpl', '480', '270', '8');
						so.addParam('allowscriptaccess', 'always');
						so.addParam('allowfullscreen', 'true');
						so.addVariable('height', '270');
						so.addVariable('width', '480');
						so.addVariable('file', '/upload/video/astrazeneca/1_2.flv');
						so.addVariable('bufferlength', '10');
						so.addVariable('autostart', 'false');
						so.addVariable('enablejs', 'true');
						so.write('video1');
					</script>
				</div>

				<div class="video video-2">
					<div class="video-title">
						<b>ЧТО ТАКОЕ ГАСТРИТ</b>

						<div>Читает профессор, д.м.н. Щербаков Петр Леонидович,
							руководитель отдела диагностической эндоскопии
							Московского клинического научно-практического центра
						</div>
					</div>
					<div id="video2" class="video-flv"></div>
					<script type="text/javascript">
						var so = new SWFObject('/players/uppod.swf', 'mpl', '480', '270', '8');
						so.addParam('allowscriptaccess', 'always');
						so.addParam('allowfullscreen', 'true');
						so.addVariable('height', '270');
						so.addVariable('width', '480');
						so.addVariable('file', '/upload/video/astrazeneca/2.flv');
						so.addVariable('bufferlength', '10');
						so.addVariable('autostart', 'false');
						so.addVariable('enablejs', 'true');
						so.write('video2');
					</script>
				</div>

				<div class="video video-3">
					<div class="video-title">
						<b>ЯЗВЕННАЯ БОЛЕЗНЬ</b>

						<div>Читает профессор, д.м.н. Щербаков Петр Леонидович,
							руководитель отдела диагностической эндоскопии
							Московского клинического научно-практического центра
						</div>
					</div>
					<div id="video3" class="video-flv"></div>
					<script type="text/javascript">
						var so = new SWFObject('/players/uppod.swf', 'mpl', '480', '270', '8');
						so.addParam('allowscriptaccess', 'always');
						so.addParam('allowfullscreen', 'true');
						so.addVariable('height', '270');
						so.addVariable('width', '480');
						so.addVariable('file', '/upload/video/astrazeneca/3.flv');
						so.addVariable('bufferlength', '10');
						so.addVariable('autostart', 'false');
						so.addVariable('enablejs', 'true');
						so.write('video3');
					</script>
				</div>

				<div class="video video-4 article">
					<div class="video-title">
						<b>КАК ЗАЩИТИТЬСЯ ОТ ГАСТРИТА</b>

						<div>Читает профессор, д.м.н. Щербаков Петр Леонидович,
							руководитель отдела диагностической эндоскопии
							Московского клинического научно-практического центра
						</div>
					</div>
					<div id="video4" class="video-flv"></div>
					<script type="text/javascript">
						var so = new SWFObject('/players/uppod.swf', 'mpl', '480', '270', '8');
						so.addParam('allowscriptaccess', 'always');
						so.addParam('allowfullscreen', 'true');
						so.addVariable('height', '270');
						so.addVariable('width', '480');
						so.addVariable('file', '/upload/video/astrazeneca/4.flv');
						so.addVariable('bufferlength', '10');
						so.addVariable('autostart', 'false');
						so.addVariable('enablejs', 'true');
						so.write('video4');
					</script>
				</div>

				<div class="video video-5 article">
					<div class="video-title">
						<b>ПОЧЕМУ НУЖНО ХОДИТЬ К ВРАЧУ</b>

						<div>Читает профессор, д.м.н. Щербаков Петр Леонидович,
							руководитель отдела диагностической эндоскопии
							Московского клинического научно-практического центра
						</div>
					</div>
					<div id="video5" class="video-flv"></div>
					<script type="text/javascript">
						var so = new SWFObject('/players/uppod.swf', 'mpl', '480', '270', '8');
						so.addParam('allowscriptaccess', 'always');
						so.addParam('allowfullscreen', 'true');
						so.addVariable('height', '270');
						so.addVariable('width', '480');
						so.addVariable('file', '/upload/video/astrazeneca/5.flv');
						so.addVariable('bufferlength', '10');
						so.addVariable('autostart', 'false');
						so.addVariable('enablejs', 'true');
						so.write('video5');
					</script>
				</div>
			</div>
		</div>
	</div>

	{# Тестирование #}
	<div class="page page-test" id="test">
		<img src="{{ asset('bundles/vidalmain/images/shkola/page-test.png') }}" class="page-test-bg"/>

		<div class="content">
			<div class="test-images">
				{% for test in tests %}
					<img src="{{ asset('bundles/vidalmain/images/test' ~test.id~ '.jpg') }}"
						{{ loop.first ? 'class="active"' }} />
				{% endfor %}
			</div>
			<div class="test-content">
				{% for test in tests %}
					<div class="question {{ loop.first ? 'active' }} {{ loop.last ? 'last' }}">
						{{ test.title|upper }}
					</div>
				{% endfor %}
				<div class="test-buttons">
					<a class="btn-red no" href="#">Нет</a>
					<a class="btn-red yes" href="#">Да</a>
				</div>
				<div class="result positive">
					<p>У Вас высока вероятность гастрита, рекомендуем Вам пройти консультацию у
						врача-гастроэнтеролога.</p>

					<p>Найти специалистов Вы можете с помощью
						<a href="{{ path('shkola_gastrita') }}#map">нашей карты</a></p>
				</div>
				<div class="result negative">
					<p>Скорее всего у Вас нет гастрита, но, для его профилактики проконсультируйтесь
						со специалистом.</p>

					<p>Найти специалистов Вы можете с помощью
						<a href="{{ path('shkola_gastrita') }}#map">нашей карты</a></p>
				</div>
			</div>
		</div>
	</div>

	{# Вопрос-ответ #}
	<div class="page-qa" id="qa">
		<div class="qa-header">
			<img src="{{ asset('bundles/vidalmain/images/shkola/qa_title.png') }}"/>
			<button id="ask" class="btn-red">ЗАДАТЬ ВОПРОС</button>
		</div>

		{% if app.session.flashbag.get('questioned')|length %}
			<div class="questioned">
				Спасибо за ваш вопрос! В ближайшее время наш специалист на него ответит.
			</div>
		{% endif %}

		<div class="ask-form">
			<form method="POST" action="{{ path('shkola_gastrita') }}#qa">
				{{ form_widget(form) }}
			</form>
		</div>

		<table class="qas">
			{% for row in questionAnswers|batch(2) %}
				<tr>
					{% for qa in row %}
						<td class="qa {{ loop.first ? 'first' : 'last' }}">
							<div class="qa-question">{{ qa.question|raw }}</div>
							<a href="#" class="link">ОТВЕТ</a>

							<div class="qa-answer">
								<div class="qa-answer-label">
									<a href="#" class="qa-answer-close">
										<img src="{{ asset('bundles/vidalmain/images/shkola/close.png') }}"/>
									</a>
									<span>ОТВЕТ:</span>
								</div>
								<div class="qa-answer-text">{{ qa.answer|raw }}</div>
							</div>
							<img class="to-right"
								 src="{{ asset('bundles/vidalmain/images/shkola/l-right.png') }}"/>
							<img class="to-left"
								 src="{{ asset('bundles/vidalmain/images/shkola/l-left.png') }}"/>
						</td>
					{% endfor %}
				</tr>
			{% endfor %}
		</table>
	</div>

	{# Карта аптек #}
	<div class="map" id="map"></div>

	</div>

{% endblock %}


{% block stylesheets %}
	{{ parent() }}
	<link rel="stylesheet" type="text/css" href="{{ asset('bundles/vidalmain/stylesheets/shkola.css') }}"/>
	<style type="text/css">

	</style>
{% endblock %}


{% block javascripts %}
	{{ parent() }}
	<script src="http://api-maps.yandex.ru/2.0-stable/?load=package.full&lang=ru-RU" type="text/javascript"></script>
	<!-- Класс множественного геокодирования -->
	<script src="http://dimik.github.io/ymaps/examples/multi-geocoder/multi-geocoder.js"
			type="text/javascript"></script>
	<script src="http://dimik.github.io/ymaps/examples/multi-geocoder/list-collection.js"
			type="text/javascript"></script>
	<script src="/bundles/vidalmain/javascripts/swfobject.js" type="text/javascript"></script>
	<script type="text/javascript">
	var sliderTimeout = 10000;
	var next = 1;
	var t = 0;

	$(document).ready(function() {
		var sliderInterval = setInterval(slider, sliderTimeout);

		// slider
		$('.slider a').click(function(e) {
			e.preventDefault();
			var $this = $(this);
			var id = $this.attr('data');

			$('.slider a.active, .images div.active, .texts div.active').removeClass('active');
			$this.addClass('active');
			$('.image-' + id).addClass('active');
			$('.text-' + id).addClass('active');

			clearInterval(sliderInterval);
			sliderInterval = setInterval(slider, sliderTimeout);

			return false;
		});

		// articles
		$('.p-left').click(function(e) {
			e.preventDefault();
			$('.articles .active').removeClass('active').prevOrLast().addClass('active');
			$('.roller .active').removeClass('active').prevOrLast().addClass('active');
			resetArticles();

			return false;
		});

		$('.p-right').click(function(e) {
			e.preventDefault();
			$('.articles .active').removeClass('active').nextOrFirst().addClass('active');
			$('.roller .active').removeClass('active').nextOrFirst().addClass('active');
			resetArticles();

			return false;
		});

		$('.roller a').click(function(e) {
			e.preventDefault();
			var $this = $(this);
			var id = $this.attr('data');
			$('.articles .active, .roller .active').removeClass('active');
			$this.addClass('active');
			$('.article-' + id).addClass('active');
			resetArticles();

			return false;
		});

		$('.article').click(function() {
			var $this = $(this);
			$this.find('.article-text, .article-img').hide();
			$this.find('.article-body').show();
		});

		$('.article-body').click(function(e) {
			e.stopPropagation();
			var $this = $(this);
			var $article = $this.closest('.article');
			$article.find('.article-body').hide();
			$article.find('.article-text, .article-img').show();
		});

		// test
		$('.test-buttons a').click(function(e) {
			e.preventDefault();
			next++;
			var $question = $('.question.active');

			if ($question.hasClass('last')) {
				showResult();
				return false;
			}

			$question.removeClass('active').next().addClass('active');
			$('.test-images .active').removeClass('active').next().addClass('active');

			if ($(this).hasClass('yes')) {
				t++;
			}
		});

		// question-answer
		$('.qa > a').click(function(e) {
			e.preventDefault();
			var $this = $(this);
			var $qa = $this.closest('.qa');
			var $qaNext = $qa.nextOrFirst();
			$qaNext.find('*').css('visibility', 'hidden');
			$this.css('visibility', 'hidden');
			$qa.find('.qa-answer').css('height', $qa.height() - 20).show();
			$qa.find('.qa-answer-text').css('height', $qa.height() - 40);
			$qa.hasClass('first')
				? $qa.find('.to-right').show()
				: $qa.find('.to-left').show();
		});

		$('.qa-answer-close').click(function(e) {
			e.preventDefault();
			var $this = $(this);
			var $qa = $this.closest('.qa');
			$this.closest('.qa-answer').hide();
			$qa.find('> a').css('visibility', 'visible');
			$qa.nextOrFirst().find('*').css('visibility', 'visible');
			$qa.find('.to-right, .to-left').hide();
		});

		$('#ask').click(function(e) {
			e.preventDefault();
			$('.ask-form').slideDown();
			$(this).hide();
			$('.questioned').hide();
		});

		if ($('.form_error ul').length) {
			$('#ask').hide();
			$('.ask-form').show();
		}

		// video
		$('.s-left').click(function(e) {
			e.preventDefault();
			$('.videos .active').removeClass('active').prevOrLast().addClass('active');
			$('.scroller .active').removeClass('active').prevOrLast().addClass('active');

			return false;
		});

		$('.s-right').click(function(e) {
			e.preventDefault();
			$('.videos .active').removeClass('active').nextOrFirst().addClass('active');
			$('.scroller .active').removeClass('active').nextOrFirst().addClass('active');

			return false;
		});

		$('.scroller a').click(function(e) {
			e.preventDefault();
			var $this = $(this);
			var id = $this.attr('data');
			$('.videos .active, .scroller .active').removeClass('active');
			$this.addClass('active');
			$('.video-' + id).addClass('active');

			return false;
		});
	});

	jQuery.fn.nextOrFirst = function(selector) {
		var next = this.next(selector);
		return (next.length) ? next : this.prevAll(selector).last();
	};
	jQuery.fn.prevOrLast = function(selector) {
		var prev = this.prev(selector);
		return (prev.length) ? prev : this.nextAll(selector).last();
	};

	function resetArticles() {
		$('.article-body').hide();
		$('.article-img, .article-text').show();
	}

	function slider() {
		$('.slider a.active').removeClass('active').nextOrFirst().addClass('active');
		$('.images div.active').removeClass('active').nextOrFirst().addClass('active');
		$('.texts div.active').removeClass('active').nextOrFirst().addClass('active');
	}

	function showResult() {
		$('.question, .test-buttons').hide();
		t > 3
			? $('.result.positive').addClass('active')
			: $('.result.negative').addClass('active');
	}

	//////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////////////

	var eee;
	ymaps.ready(init);
	var myMap;

	function init() {

		myMap = new ymaps.Map("map", {
			center: [55.76, 37.64],
			zoom:   7
		});


		searchControl = new ymaps.control.SearchControl({
			provider:     'yandex#map',
			noPopup:      false,
			useMapBounds: true
		});
		var placemarks = {};
		var clusterer = new ymaps.Clusterer({
			// clusterDisableClickZoom: false
			// clusterBalloonContentBodyLayout: "cluster#balloonCarouselContent"
		});

		var geoObjects = [];

		// function addPlacemark(id, name, latitude, longitude, address, metro, phone, schedule, branchId) {
		function addPlacemark(id, latitude, longitude) {

			var balloon = '';

			var placemark = new ymaps.Placemark([latitude, longitude], {
				// content: name,
				balloonContent: 'Загрузка...',
				hasBalloon:     true,
				drugStoreId:    id,
				hintContent:    'Загрузка...'
			}, {
				preset:          'twirl#hospitalIcon',
				iconImageHref:   '{{ asset('bundles/vidalmain/images/apt.png') }}',
				iconImageSize:   [20, 20],
				iconImageOffset: [-10, -10]
			});

			// myMap.geoObjects.add(placemark);

			clusterer.add(placemark);
			placemarks[id] = placemark;
		}

		var layer = new ymaps.Layer('', {zIndex: 0});
		myMap.layers.add(layer);
		var projection = myMap.options.get('projection');
		var xhr = null;
		var cachedTiles = {};
		var addedStores = {};

		function loadDrugStores() {

			var zoom = myMap.getZoom();

			var globalPixelPoint = projection.toGlobalPixels(myMap.getBounds()[1], zoom);
			var clientPixelPoint = layer.toClientPixels(globalPixelPoint);
			var rightBottomTile = layer.clientPixelsToNumber(clientPixelPoint, zoom);
			var leftTopTile = layer.clientPixelsToNumber(clientPixelPoint, zoom);
			// console.log(rightBottomTile);

			var countTiles = 0;
			var tiles = {};
			for (var i = leftTopTile[0]; i < rightBottomTile[0] + 1; i++) {
				for (var j = rightBottomTile[1]; j < leftTopTile[1] + 1; j++) {

					var tileKey = zoom + ':' + i + ':' + j;

					if (typeof cachedTiles[tileKey] !== 'undefined') continue;

					var tileNumber = [i, j];

					var clientBounds = layer.numberToClientBounds(tileNumber, zoom);
					var globalBounds = [
						layer.fromClientPixels(clientBounds[0], zoom),
						layer.fromClientPixels(clientBounds[1], zoom)
					];

					var geoBounds = [
						projection.fromGlobalPixels(globalBounds[0], zoom),
						projection.fromGlobalPixels(globalBounds[1], zoom)
					];

					tiles[tileKey] = {
						bounds: geoBounds,
						number: tileNumber
					}
					countTiles++;
					cachedTiles[tileKey] = 1;

				}
			}

			if (countTiles <= 0) return;


			var Bounds = myMap.getBounds();
			var urlb = 'y1=' + Bounds[0][0] + '&x1=' + Bounds[0][1] + '&y2=' + Bounds[1][0] + '&x2=' + Bounds[1][1] + '&z=' + myMap.getZoom();
			xhr = $.post('{{ path('astrazeneca_map_xml') }}?' + urlb, tiles, function(stores) {
				stores = JSON.parse(stores);
				$.each(stores, function(index, store) {
					if (addedStores['store_id_' + store.id] === 1) return;
					addedStores['store_id_' + store.id] = 1;
					addPlacemark(
						store.id,
						store.Latitude,
						store.Longitude
					);
				});
			});

		}


		myMap.events.add('boundschange', function(e) {
			loadDrugStores();
		});

		myMap.events.add('balloonopen', function(e) {
			eee = e.get('balloon').getData();
			if (e.get('balloon').getData().geoObject != null) {
				var geoObjectProperties = e.get('balloon').getData().geoObject.properties;
				if (geoObjectProperties.get('balloonContentLoaded')) return;
				var drugStoreId = geoObjectProperties.get('drugStoreId');

				$.post(Routing.generate('zgetMapBalloonContent', { 'id': drugStoreId }), function(balloon) {
					geoObjectProperties.set('balloonContent', balloon);
					geoObjectProperties.set('balloonContentLoaded', true);
				});
			} else {
				var geoObjectProperties = e.get('balloon').getData().properties.getAll().geoObjects[0].properties;
				if (geoObjectProperties.get('balloonContentLoaded')) return;
				var drugStoreId = geoObjectProperties.get('drugStoreId');

				$.post(Routing.generate('zgetMapBalloonContent', { 'id': drugStoreId }), function(balloon) {
					geoObjectProperties.set('balloonContent', balloon);
					geoObjectProperties.set('balloonContentLoaded', true);
				});
			}
		});

		myMap.events.add('hintshow', function(e) {
			if (e.get('hint').getData().geoObject != null) {
				var geoObjectProperties = e.get('hint').getData().geoObject.properties;
				if (geoObjectProperties.get('hintContentLoaded')) return;
				var drugStoreId = geoObjectProperties.get('drugStoreId');

				$.post(Routing.generate('zgetMapHintContent', { 'id': drugStoreId }), function(balloon) {
					geoObjectProperties.set('hintContent', balloon);
					geoObjectProperties.set('hintContentLoaded', true);
				});
			} else {
				var geoObjectProperties = e.get('hint').getData().properties.getAll().geoObjects[0].properties;
				if (geoObjectProperties.get('hintContentLoaded')) return;
				var drugStoreId = geoObjectProperties.get('drugStoreId');

				$.post(Routing.generate('zgetMapHintContent', { 'id': drugStoreId }), function(balloon) {
					geoObjectProperties.set('hintContent', balloon);
					geoObjectProperties.set('hintContentLoaded', true);
				});
			}
		});

		function enableScrollZoom() {
			myMap.behaviors.enable('scrollZoom');
			myMap.events.remove('click', enableScrollZoom);
		}

		myMap.events.add('click', enableScrollZoom);

		loadDrugStores();

//            clusterer.add(geoObjects);

		myMap.geoObjects.add(clusterer);
		// myMap.geoObjects.add(clusterer);

		myMap.controls.add(new ymaps.control.ZoomControl());

// добавляем панель на карту в нужную позицию
//            myMap.controls.add(searchControl, { left: '40px', top: '10px' });

		jQuery(function($) {
			$(".region-drug-stores,.item-related_points").on("click", "a.change_coordinates", function(e) {
				var coordinates = $(this).data("coordinates").split(",");
				var xCoords = parseFloat(coordinates[0]);
				var yCoords = parseFloat(coordinates[1]);
				var id = $(this).attr("value");
				myMap.panTo(
					[xCoords, yCoords], {
						checkZoomRange: true,
						flying:         true,
						callback:       function(e) {
							var zoom = myMap.getZoom();
							if (zoom < 15) {
								zoom = 15;
								myMap.setZoom(zoom, {duration: 1000})
							}
							mark = placemarks[id];
							if (mark && mark.getMap()) {
								mark.balloon.open();
							} else {
								var clustererListener = clusterer.events.group()
									.add('add', function(e) {
										mark = placemarks[id];
										if (mark && mark.getMap()) {
											mark.balloon.open();
											clustererListener.removeAll();
										}
									})
							}
						}
					}
				);


				var elem = $(this).attr("href"),
					destination = $(elem).offset().top;
				$("html:not(:animated),body:not(:animated)").animate({scrollTop: destination}, 1000, 'swing');

				return false;
			});
		})
	}

	jQuery(function($) {

		$('.search_box.search_box-pharmacy').submit(function(e) {
			e.preventDefault();
			$('.ymaps-b-search__button .ymaps-b-form-button__text').click();
		});

		$('#choiceField').keyup(function() {
			$('.ymaps-b-form-input__input').val($(this).val());
		});

	});
	</script>
{% endblock %}