{% extends 'VidalMainBundle::layout.html.twig' %}

{% block title %}
    <h1>Шаг первый - выберите специальность</h1>
{% endblock %}

{% block content %}
    {% if specialties is not empty %}
        <div class="spec-box">
            {% for spec in specialties %}
                <div class="spec-item" id="{{ spec.code }}">{{ spec.name }}</div>
                <div class="doc-box" id="spec-{{ spec.code }}"></div>
            {% endfor %}
        </div>
    {% else %}
        Записи к врачам отсутствуют. <a href="{{ path('appointment_create') }}">Записаться</a>
    {% endif %}

    <div class="bg-gray-ap"></div>
    <div class="loader-ap"><img src="{{ asset('bundles/vidalmain/images/loader.gif') }}" style="width: 64px"></div>
{% endblock %}




{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('bundles/vidalmain/javascripts/date.js') }}"></script>
    <script>
        $(document).ready(function(){
            $('.spec-item').click(function(){
                var id = $(this).attr('id');
                $.ajax({
                    type: "POST",
                    url: Routing.generate('appointment_doctor',{'doctorId' : id }),
                    success: function(msg){
                        data = msg.data.availableResource;
                        txt = '';
                        $.each(data,function(i, val){
                            console.log(val = val);
                            txt +=  '<div class="doc-item" data-id="'+val.id+'" availableResourceId="'+val.lpuRoomsInfo.lpuRoomView.availableResourceId+'" ' +
                                    'complexResourceId="'+val.lpuRoomsInfo.lpuRoomView.complexResourceId+'">';
//                           txt +=  val.lastName+' '+val.firstName+' '+val.secondName+' ( ЛПУ: '+val.lpuRoomsInfo.lpuRoomView.lpuShortName+' каб.: '+val.lpuRoomsInfo.lpuRoomsView.roomNumber+') ';
                            txt +=  val.lastName+' '+val.firstName+' '+val.secondName;
                            txt +=  '</div>' +
                                    '<div class="dateTime-box" id="doc-'+val.id+'"></div>';
                        });
                        $('#spec-'+id).html(txt);
                    }
                });
            });


            $('.doc-box').on('click','.doc-item', function(){
                var availableResourceId = $(this).attr('availableResourceId');
                var complexResourceId = $(this).attr('complexResourceId');
                $.ajax({
                    type: "POST",
                    url: Routing.generate('appointment_datetime',{'availableResourceId' : availableResourceId, 'complexResourceId': complexResourceId }),
                    success: function(msg){
                        data = msg.data.return;
                        var txt = '';
                        $.each(data.schedules,function(i, val){
                            var d = new Date(val.date);
                            console.log(dd = d);
                            var curr_date = d.getDate();
                            var curr_month = d.getMonth() + 1; //Months are zero based
                            var curr_year = d.getFullYear();
//                            txt += '<div class="dateTime"><span class="date">'+curr_date + "." + curr_month + "." + curr_year + "</span>";
                            txt += '<div class="dateTime"><span class="date">'+ (d).toString('dd.MM.yyyy') + "</span><div style='margin-left: 25px;'>";
                            $.each(val.resourceSchedule.timePeriods,function(timei, timeval){
                                if (timeval.allowedAppointment == true){
                                    enabled = 'enabledTime';
                                }else{
                                    enabled = ''
                                }
                                var d = new Date(timeval.startTime);
                                var curr_hour = d.getHours();
                                var curr_minute = d.getMinutes(); //Months are zero based

                                txt += '<span class="time '+enabled+'">'+ d.toString('HH:mm') +'</span>';
//                                txt += '<span class="time '+enabled+'">'+curr_hour+':'+curr_minute+'</span>';
                            });
                            txt += '</div>';
                            txt += '</div>';
                        });
                        $('#doc-'+availableResourceId).html(txt);
                    }
                });
            });

        });
    </script>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .spec-box{
            width: 500px;
        }
        .spec-box .spec-item{
            margin-top: -1px;
            /*border: 1px solid #cc0000;*/
            padding: 10px 10px;
            border-bottom: 1px solid #CCCCCC;
            border-top: 1px solid #CCCCCC;
            text-transform: uppercase;

        }
        div.doc-item {
            margin-top: -1px;
            /*border: 1px solid #cc0000;*/
            padding: 5px 10px;
            padding-left: 40px;
        }
        .spec-item:hover, .doc-item:hover{
            background: #eeeeee;
            cursor: pointer;
        }

        .date{
            font-weight: bold;
            padding: 0 10px 0 10px;
            display: inline-block;
            width: 60px;
            margin-top: 10px;
        }
        .time{
            padding: 3px 10px;
            background: #eeeeee;
            border: 1px solid #eeeeee;
            border-radius: 4px;
            display: inline-block;
            margin-left: 10px;
            margin-top: 10px;
        }
        .time:hover{
            border: 1px solid #CC0000;
            cursor: pointer;
        }
        .dateTime{
            /*height: 30px;*/
            padding: 0 10px 0 40px;
            /*padding-top: 10px;*/
        }
        .dateTime-box{
            padding-top: 10px;
        }
        .bg-gray-ap{
            position: fixed;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            background: #555555;
            opacity: 0.5;
            filter: alpha(Opacity=50);
            z-index: 997;
        }
        .loader-ap{
            position: fixed;
            width: 64px;
            height: 64px;
            left: 50%;
            margin-left: -32px;
            top: 300px;
            z-index: 998;
        }
    </style>
{% endblock %}